# version debug or release
VER ?=debug

# The target platform extform information.
# You can change the MACRO 'PLATFORM' or use make : make PLATFORM=[IOS, LINUX, MACOS]
# # LINUX MACOS IOS

ifndef PLATFORM
    PLATFORM = LINUX
    export PLATFORM
endif

# obj path
TARGET_INCLUDE_PATH:=$(BOTTOM_LIB_TCP)/out/include
export TARGET_INCLUDE_PATH

# Global includes
GLOBAL_INCLUDES:= -I $(TARGET_INCLUDE_PATH)
export GLOBAL_INCLUDES

# Target path
TARGET_PATH:=$(BOTTOM_LIB_TCP)/out
export TARGET_PATH

# Global flags for compile
ifeq ($(VER), debug)
GLOBAL_CCXXFLAGS:= -fPIC -MMD -Wall -DDEBUG -g3 -MP -nostartfiles
TARGET_EXE_PATH := $(TARGET_PATH)/test/debug
TARGET_LIB_PATH := $(TARGET_PATH)/lib/debug
OBJ_PATH:=$(BOTTOM_LIB_TCP)/out/obj/debug
export OBJ_PATH
export GLOBAL_CCXXFLAGS
export TARGET_EXE_PATH
export TARGET_LIB_PATH

else
GLOBAL_CCXXFLAGS:= -fPIC -MMD -Wall -O2 -MP -nostartfiles
TARGET_EXE_PATH := $(TARGET_PATH)/test/release
TARGET_LIB_PATH := $(TARGET_PATH)/lib/release
OBJ_PATH:=$(BOTTOM_LIB_TCP)/out/obj/release
export OBJ_PATH
export GLOBAL_CCXXFLAGS
export TARGET_EXE_PATH
export TARGET_LIB_PATH

endif
 
# Global lib dir
GLOBAL_LIBDIR:= -L $(TARGET_LIB_PATH)
export GLOBAL_LIBDIR

# multi thread use
ifneq ($(ARCH), "")
    TARGET_PATH_R:= $(TARGET_PATH)/$(ARCH)
else
    TARGET_PATH_R:= $(TARGET_PATH)
endif

